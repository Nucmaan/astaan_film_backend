version: '3.8'

services:
  kong-db:
    image: postgres:13
    container_name: kong-db
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    networks:
      - kong-net
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 5s
      timeout: 5s
      retries: 5

  kong-migrations:
    image: kong:3.4
    depends_on:
      kong-db:
        condition: service_healthy
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kongadmin
    command: kong migrations bootstrap
    restart: on-failure
    networks:
      - kong-net

  kong:
    image: kong:3.4
    container_name: kong
    depends_on:
      - kong-migrations
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong
      KONG_PASSWORD: kongadmin
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"
      - "8001:8001"
    restart: on-failure
    networks:
      - kong-net

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "3001:8001"
    environment:
      - NODE_ENV=docker
      - DOCKER_DB_NAME=kong
      - DOCKER_DB_USER=kong
      - DOCKER_DB_PASS=kong
      - DOCKER_DB_HOST=kong-db
      - REDIS_HOST=redis
    depends_on:
      kong-db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - kong-net

  task-service:
    build:
      context: ./task-service
    container_name: task-service
    ports:
      - "3002:3002"
    environment:
      - NODE_ENV=docker
      - DOCKER_DB_NAME=kong
      - DOCKER_DB_USER=kong
      - DOCKER_DB_PASS=kong
      - DOCKER_DB_HOST=kong-db
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - kong-net

  project-service:
    build:
      context: ./project-service
    container_name: project-service
    ports:
      - "3003:3003"
    environment:
      - NODE_ENV=docker
      - DOCKER_DB_NAME=kong
      - DOCKER_DB_USER=kong
      - DOCKER_DB_PASS=kong
      - DOCKER_DB_HOST=kong-db
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - kong-net

  payment-service:
    build:
      context: ./payment-service
    container_name: payment-service
    ports:
      - "3004:3004"
    environment:
      - NODE_ENV=docker
      - DOCKER_DB_NAME=kong
      - DOCKER_DB_USER=kong
      - DOCKER_DB_PASS=kong
      - DOCKER_DB_HOST=kong-db
    networks:
      - kong-net

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    ports:
      - "3005:3005"
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
    networks:
      - kong-net
  
  chat-service:
    build:
      context: ./chat-service
    container_name: chat-service
    ports:
      - "3006:3006"
    networks:
      - kong-net
  
  analytics-service:
    build:
      context: ./analytics-service
    container_name: analytics-service
    ports:
      - "3007:3007"
    networks:
      - kong-net
      

  redis:
    image: redis:6
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - kong-net

networks:
  kong-net:
    driver: bridge
